import telebot

TOKEN = "7551128400:AAFwdQcOZs6zoAp0xBBCcL7Zbd2KejcLzM4"
bot = telebot.TeleBot(TOKEN)

user_data = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    if user_id not in user_data:
        user_data[user_id] = {
            "balance": 0,
            "history": []
        }

    gif_id = "https://99px.ru/sstorage/86/2020/02/11102201155383879.gif"
    bot.send_animation(message.chat.id, gif_id)

    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —É—á—ë—Ç–∞ –±—é–¥–∂–µ—Ç–∞ üí∞\n\n"
                          "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: \n"
                          "/add (+/-) —Å—É–º–º–∞, –æ–ø–∏—Å–∞–Ω–∏–µ \n"
                          "/balance ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å\n"
                          "/history ‚Äî –∏—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π\n"
                          "/total ‚Äî –æ–±—â—É—é —Å—É–º–º—É –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤\n"
                          "/clear ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏ —Å–±—Ä–æ—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å")

# –ö–æ–º–∞–Ω–¥–∞ /add
@bot.message_handler(commands=['add'])
def add_transaction(message):
    user_id = message.from_user.id
    if user_id not in user_data:
        user_data[user_id] = {
            "balance": 0,
            "history": []
        }

    try:
        parts = message.text.split(maxsplit=2)
        if len(parts) < 3:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π: /add (+/-) —Å—É–º–º–∞, –æ–ø–∏—Å–∞–Ω–∏–µ")

        amount = float(parts[1])
        description = parts[2]

        user_data[user_id]["balance"] += amount
        (user_data[user_id]["history"].append
        ({
            "amount": amount,
            "description": description
        }))

        sign = "–¥–æ—Ö–æ–¥" if amount > 0 else "—Ä–∞—Å—Ö–æ–¥"
        bot.reply_to(message, f"‚úÖ {sign} –Ω–∞ {abs(amount)}‚ÇΩ –¥–æ–±–∞–≤–ª–µ–Ω: {description}")
    except Exception as s:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(s)}")


# –ö–æ–º–∞–Ω–¥–∞ /balance
@bot.message_handler(commands=['balance'])
def show_balance(message):
    user_id = message.from_user.id
    if user_id not in user_data:
        bot.reply_to(message, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –î–æ–±–∞–≤—å –ø–µ—Ä–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥–æ–π /add.")
        return

    balance = user_data[user_id]["balance"]
    bot.reply_to(message, f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance:.2f}‚ÇΩ")

# –ö–æ–º–∞–Ω–¥–∞ /history
@bot.message_handler(commands=['history'])
def show_history(message):
    user_id = message.from_user.id
    if user_id not in user_data or not user_data[user_id]["history"]:
        bot.reply_to(message, "üóë –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.")
        return

    history_text = "üßæ –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π:\n"
    for entry in user_data[user_id]["history"][-5:]:
        amt = entry["amount"]
        desc = entry["description"]
        sign = "+" if amt > 0 else "-"
        history_text += f"{sign}{abs(amt)}‚ÇΩ ‚Äî {desc}\n"

    bot.reply_to(message, history_text)

# –ö–æ–º–∞–Ω–¥–∞ /clear
@bot.message_handler(commands=['clear'])
def clear_history(message):
    user_id = message.from_user.id
    if user_id in user_data:
        user_data[user_id]["balance"] = 0
        user_data[user_id]["history"] = []
        bot.reply_to(message, "üßπ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞. –ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω –¥–æ 0.")
    else:
        bot.reply_to(message, "üßπ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—á–∏—Å—Ç–∫–∏.")

# –ö–æ–º–∞–Ω–¥–∞ /total
@bot.message_handler(commands=['total'])
def show_totals(message):
    user_id = message.from_user.id
    if user_id not in user_data or not user_data[user_id]["history"]:
        bot.reply_to(message, "üóë –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")
        return

    income = sum(entry["amount"] for entry in user_data[user_id]["history"] if entry["amount"] >= 0)
    expense = sum(entry["amount"] for entry in user_data[user_id]["history"] if entry["amount"] < 0)

    bot.reply_to(message, f"üìä –í—Å–µ–≥–æ –¥–æ—Ö–æ–¥–æ–≤: +{income:.2f}‚ÇΩ\n"
                          f"üí∏ –í—Å–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–æ–≤: {expense:.2f}‚ÇΩ")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
